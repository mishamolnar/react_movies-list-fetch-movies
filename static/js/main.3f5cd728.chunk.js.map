{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api/api.ts","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","handleTitle","handleGetMovies","addMovie","addError","isFound","isLoading","noMovieError","type","id","placeholder","classNames","onChange","onClick","App","useState","movieTitle","setMovieTitle","setMovie","setMovies","setAddError","setIsFound","setNoMovieError","setIsLoading","a","query","fetch","then","response","json","Response","undefined","event","target","value","some","movie2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f5cd728.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './FindMovie.scss';\n\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movie: Movie | undefined,\n  handleTitle: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  handleGetMovies: () => void,\n  addMovie: () => void,\n  addError: boolean,\n  isFound: boolean,\n  isLoading: boolean,\n  noMovieError: boolean,\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  movie,\n  handleTitle,\n  handleGetMovies,\n  addMovie,\n  addError,\n  isFound,\n  isLoading,\n  noMovieError,\n}) => {\n  const movieCopyError = 'Movie already added';\n  const noMovie = 'You need to find Movie first :)';\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames(\n                  'input',\n                  {\n                    'is-danger': !isFound,\n                  },\n                )\n              }\n              onChange={handleTitle}\n            />\n          </div>\n\n          {!isFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleGetMovies}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n\n        {!isLoading\n          ? (movie && <MovieCard movie={movie} />)\n          : (<p>Loading...</p>) }\n        {addError && movieCopyError}\n        {noMovieError && noMovie}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { movieFromServer } from './api/api';\n\nexport const App: React.FC = () => {\n  const [movieTitle, setMovieTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie>();\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const [addError, setAddError] = useState<boolean>(false);\n  const [isFound, setIsFound] = useState<boolean>(true);\n  const [noMovieError, setNoMovieError] = useState<boolean>(false);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsFound(true);\n    setMovieTitle(event.target.value);\n  };\n\n  const handleGetMovies = async () => {\n    setIsLoading(true);\n    const response = await movieFromServer(movieTitle);\n\n    if (response.Response !== 'False') {\n      setIsFound(true);\n      setNoMovieError(true);\n      setAddError(true);\n\n      setMovie(response);\n    } else {\n      setIsFound(false);\n      setMovie(undefined);\n      setNoMovieError(false);\n    }\n\n    setIsLoading(false);\n  };\n\n  const addMovie = () => {\n    const checkRepeat: boolean = movies.some(movie2 => movie2.imdbID === movie?.imdbID);\n\n    if (checkRepeat) {\n      setMovie(undefined);\n      setAddError(true);\n\n      return;\n    }\n\n    if (movie) {\n      setAddError(false);\n      setNoMovieError(false);\n      setMovies([...movies, movie]);\n    } else {\n      setNoMovieError(true);\n    }\n\n    setMovie(undefined);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movie={movie}\n          handleTitle={handleTitle}\n          handleGetMovies={handleGetMovies}\n          addMovie={addMovie}\n          addError={addError}\n          isFound={isFound}\n          isLoading={isLoading}\n          noMovieError={noMovieError}\n        />\n      </div>\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=4661256c&t=';\n\nexport const movieFromServer = (query: string) => {\n  return fetch(`${BASE_URL}${query}`).then(response => response.json());\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}